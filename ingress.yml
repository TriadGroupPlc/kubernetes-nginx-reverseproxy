# Ingress resource defining the
# nginx rules and behaviours
# The nginx controller watches for new ingress resources 
# being created and reconfigures itself based on the configuration
# in the ingress resource  
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-world-ingress
  namespace: nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.org/ssl-services: "hello-world-svc"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    # Note that if your ingress is load balancing across
    # multiple webserver backend services, your client may hit
    # issues with antiforgery tokens unless those backend
    # services store AF tokens centrally. To avoid this issue, 
    # you can use 'upstream-hash-by' based on the clients IP 
    # so that nginx routes all requests from the same client IP
    # to the same POD ensuring your client hits the same backend 
    # webservice that created the initial token

    # UNCOMMENT TO ENABLE STICKY SESSIONS BASED ON CLIENT IP
    # nginx.ingress.kubernetes.io/upstream-hash-by: $remote_addr
spec:
  tls:
    - hosts:
      - nginx.triad.co.uk
      secretName: tls-certificate
  rules:
  - host: nginx.triad.co.uk
    http:
      paths:
      - path: /web1(/|$)(.*)      
        backend:
          serviceName: hello-world-svc
          servicePort: 80